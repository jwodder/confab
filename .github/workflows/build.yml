name: Build Binaries

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            os-name: macos
            architecture: arm64
            suffix: ""
            use-cross: true
            options: ""
         #- target: aarch64-unknown-linux-gnu
         #  os: ubuntu-latest
         #  os-name: linux
         #  architecture: arm64
         #  suffix: ""
         #  use-cross: true
         #  options: --features vendored-openssl
         #- target: i686-unknown-linux-gnu
         #  os: ubuntu-latest
         #  os-name: linux
         #  architecture: i686
         #  suffix: ""
         #  use-cross: true
         #  options: --features vendored-openssl
          - target: x86_64-apple-darwin
            os: macos-latest
            os-name: macos
            architecture: x86_64
            suffix: ""
            use-cross: false
            options: ""
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            os-name: windows
            architecture: x86_64
            suffix: ".exe"
            use-cross: false
            options: ""
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            os-name: linux
            architecture: x86_64
            suffix: ""
            use-cross: false
            options: --features vendored-openssl
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Activate cache
        uses: Swatinem/rust-cache@v2

      - name: Install cross
        if: matrix.use-cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build
        if: "!matrix.use-cross"
        run: cargo build --release --target ${{ matrix.target }} --verbose ${{ matrix.options }}

      - name: Build w/cross
        if: matrix.use-cross
        run: cross build --release --target ${{ matrix.target }} --verbose ${{ matrix.options }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: confab-${{ matrix.os-name }}-${{ matrix.architecture }}
          path: target/${{ matrix.target }}/release/confab${{ matrix.suffix }}
          retention-days: 10
